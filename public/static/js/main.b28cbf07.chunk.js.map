{"version":3,"sources":["Arrow/CSV.svg","Arrow/radio.svg","Arrow/purchase.svg","Arrow/Arrow_PNG.png","Arrow/Footer twitter.svg","Arrow/Footer instagram.svg","Arrow/Footer discord.svg","Arrow/Logout.svg","Arrow/userimg.svg","Footer.js","Order.js","navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","src","logo","alt","href","twitter","insta","discord","Order","startDate","endDate","status","proxyAmount","planName","_id","showIPS","handleRenewal","window","location","style","cursor","onClick","isMobile","Date","toLocaleDateString","getStatus","NavBar","discordUsername","discordImage","logout","App","useState","orders","updateOrders","user","updateUser","proxies","updateProxies","useEffect","a","fetch","result","json","data","id","xmlns","width","height","viewBox","x","y","filterUnits","dy","input","stdDeviation","flood-opacity","operator","in2","in","transform","filter","data-name","fill","stroke","stroke-width","cx","cy","r","radio","download","alert","split","map","ip","index","key","proxyUser","proxyUserPassword","purchase","order","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b28cbf07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CSV.b8345ff4.svg\";","module.exports = __webpack_public_path__ + \"static/media/radio.09e1606f.svg\";","module.exports = __webpack_public_path__ + \"static/media/purchase.c6847b0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Arrow_PNG.a222d6b8.png\";","module.exports = __webpack_public_path__ + \"static/media/Footer twitter.d397ffe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Footer instagram.376ac978.svg\";","module.exports = __webpack_public_path__ + \"static/media/Footer discord.0194cf6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logout.89598ff1.svg\";","module.exports = __webpack_public_path__ + \"static/media/userimg.6258b9e9.svg\";","import React from \"react\";\r\nimport logo from \"./Arrow/Arrow_PNG.png\";\r\nimport twitter from \"./Arrow/Footer twitter.svg\";\r\nimport insta from \"./Arrow/Footer instagram.svg\";\r\nimport discord from \"./Arrow/Footer discord.svg\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"footercontainer\">\r\n        <div className=\"secone\">\r\n          <img src={logo} alt=\"\" />\r\n          <p className=\"light\">ARROW PROXIES</p>\r\n        </div>\r\n\r\n        <div className=\"sectwo\">\r\n          <a href={\"#\"}>\r\n            <div className=\"footerheader\">Menu</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerlinks\">Home</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerlinks\">Features</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerlinks\">Purchase</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerlinks\">FAQ</div>\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"secthree\">\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerheader\">Resources</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerlinks\">Terms of Policy</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerlinks\">Privacy Policy</div>\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"secfour\">\r\n          <a href={\"#\"}>\r\n            {\" \"}\r\n            <div className=\"footerheader\">Get In Touch</div>\r\n          </a>\r\n          <a href={\"#\"}>\r\n            <div className=\"footerlinks\">arrowproxies@gmail.com</div>\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"secfive\">\r\n          <a href={\"#\"}>\r\n            <img src={twitter} alt=\"\" />\r\n          </a>\r\n          <a href={\"#\"}>\r\n            <img src={insta} alt=\"\" />\r\n          </a>\r\n          <a href={\"#\"}>\r\n            <img src={discord} alt=\"\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nfunction Order({\r\n  startDate,\r\n  endDate,\r\n  status,\r\n  proxyAmount,\r\n  planName,\r\n  _id,\r\n  showIPS,\r\n}) {\r\n  const handleClick = () => {\r\n    if (status == 1 || status == 2) {\r\n      if (isMobile) {\r\n        window.location.href = `/api/download/${_id}`;\r\n      } else {\r\n        showIPS(_id);\r\n      }\r\n    }\r\n    // } else {\r\n    //   window.location.href = `/renew/${_id}`;\r\n    // }\r\n  };\r\n\r\n  const handleRenewal = () => {\r\n    window.location.href = `/renew/${_id}`;\r\n  };\r\n\r\n  const getStatus = (status) => {\r\n    switch (status) {\r\n      case 1:\r\n        return \"Active\";\r\n      case 2:\r\n        return (\r\n          <div className=\"status3\" onClick={handleRenewal}>\r\n            Renew Now\r\n          </div>\r\n        );\r\n      case 0:\r\n        return \"Expired\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\" style={{ cursor: \"pointer\" }} onClick={handleClick}>\r\n      <div className=\"flex\">\r\n        <div className=\"date\">\r\n          {new Date(startDate).toLocaleDateString(\"en-us\")}\r\n        </div>\r\n        <div className={`ready status-${status}`}>{getStatus(status)}</div>\r\n      </div>\r\n      <div className=\"flex\">\r\n        <div className=\"amount\">{proxyAmount}</div>\r\n        <div className=\"name\">{planName}</div>\r\n      </div>\r\n      <div className=\"\">\r\n        <div>\r\n          <p className=\"light\">Order Number</p>\r\n          <div className=\"ordernumber\">{\"#\" + _id}</div>\r\n        </div>\r\n        <div>\r\n          <p className=\"light\">End Date</p>\r\n          <div className=\"expirydate\">\r\n            {\" \"}\r\n            {new Date(endDate).toLocaleDateString(\"en-us\")}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\n\r\nimport logout from \"./Arrow/Logout.svg\";\r\nimport userimg from \"./Arrow/userimg.svg\";\r\n\r\nfunction NavBar({ discordUsername, discordImage }) {\r\n  return (\r\n    <div className=\"postloginnav\">\r\n      <div className=\"navgrid\">\r\n        <div className=\"userdetails\">\r\n          <div className=\"username bold\">{discordUsername || \"Username\"}</div>\r\n          <div\r\n            className=\"logout\"\r\n            onClick={() => {\r\n              window.location = \"/logout\";\r\n            }}\r\n          >\r\n            <img src={logout} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"navlinks\">\r\n          <a href=\"/purchase\" className=\"\">\r\n            Purchase\r\n          </a>\r\n          <a href=\"https://dash.arrowproxies.com/store\" className=\"\">\r\n            Store\r\n          </a>\r\n\r\n          <a href=\"#\" className=\"navactive\">\r\n            Dashboard\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"userimg\">\r\n        <img src={discordImage} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport radio from \"./Arrow/radio.svg\";\nimport download from \"./Arrow/CSV.svg\";\nimport purchase from \"./Arrow/purchase.svg\";\n\nimport \"./App.css\";\n\nimport Footer from \"./Footer\";\nimport Order from \"./Order\";\nimport NavBar from \"./navbar\";\n\nfunction App() {\n  const [orders, updateOrders] = useState([]);\n\n  const [user, updateUser] = useState({});\n  const [proxies, updateProxies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let result = await fetch(\"/api/orders\");\n      let data = await result.json();\n      updateOrders(data.orders);\n      updateUser(data.user);\n    })();\n  }, []);\n\n  const showIPS = (id) => {\n    (async () => {\n      let result = await fetch(`/api/proxies/${id}`);\n      let data = await result.json();\n      updateProxies(data[0]);\n    })();\n  };\n\n  const __renderIps = (data) => {\n    if (!data || !data.proxies) {\n      return <p></p>;\n    }\n    return data.proxies.split(\"\\n\").map((ip, index) => {\n      return (\n        <span key={index}>\n          {ip}:{data.proxyUser}:{data.proxyUserPassword}\n          <br />\n        </span>\n      );\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar {...user} />\n      <div className=\"wrapper\">\n        <div className=\"header\">Dashboard</div>\n        <div className=\"smheader\">CONTROL YOUR EXPERIENCE</div>\n\n        <div className=\"maindash\">\n          <div className=\"dash\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"267\"\n              height=\"267\"\n              viewBox=\"0 0 267 267\"\n            >\n              <defs>\n                <filter\n                  id=\"Green_Circle_for_Dashboard\"\n                  x=\"0\"\n                  y=\"0\"\n                  width=\"267\"\n                  height=\"267\"\n                  filterUnits=\"userSpaceOnUse\"\n                >\n                  <feOffset dy=\"3\" input=\"SourceAlpha\" />\n                  <feGaussianBlur stdDeviation=\"3\" result=\"blur\" />\n                  <feFlood flood-opacity=\"0.161\" />\n                  <feComposite operator=\"in\" in2=\"blur\" />\n                  <feComposite in=\"SourceGraphic\" />\n                </filter>\n              </defs>\n              <g\n                transform=\"matrix(1, 0, 0, 1, 0, 0)\"\n                filter=\"url(#Green_Circle_for_Dashboard)\"\n              >\n                <g\n                  id=\"Green_Circle_for_Dashboard-2\"\n                  data-name=\"Green Circle for Dashboard\"\n                  transform=\"translate(9 6)\"\n                  fill=\"none\"\n                  stroke=\"#2bcd95\"\n                  stroke-width=\"20\"\n                >\n                  <circle cx=\"124.5\" cy=\"124.5\" r=\"124.5\" stroke=\"none\" />\n                  <circle cx=\"124.5\" cy=\"124.5\" r=\"114.5\" fill=\"none\" />\n                </g>\n              </g>\n            </svg>\n            <div className=\"texts\">\n              <div className=\"remaining\">UNLIMITED</div>\n              <div className=\"smtext\">GB REMAINING</div>\n            </div>\n          </div>\n\n          <div className=\"proxylist\">\n            <div className=\"proxytexts\">\n              <p className=\"proxytext\">\n                <span>\n                  <img src={radio} alt=\"radio\" />\n                </span>\n                Proxy List\n              </p>\n              <button>\n                <img\n                  src={download}\n                  alt=\"download\"\n                  onClick={() => {\n                    if (proxies._id) {\n                      window.location.href = `/api/download/${proxies._id}`;\n                    } else {\n                      alert(\"Select an order first\");\n                    }\n                  }}\n                />\n              </button>\n            </div>\n            <div className=\"list\">{__renderIps(proxies)}</div>\n          </div>\n        </div>\n\n        <div className=\"purchase\">\n          <div className=\"purchasetext\">\n            <div>\n              <span>\n                <img src={purchase} />\n              </span>\n              Purchased\n            </div>\n            <img src={download} />\n          </div>\n\n          <div className=\"boxes\">\n            {orders.map((order, index) => (\n              <Order {...order} showIPS={showIPS} key={index} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}